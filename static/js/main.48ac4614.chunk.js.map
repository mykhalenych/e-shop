{"version":3,"sources":["Components/Main/Blocks/Card.js","Redux/products.selectors.js","Components/Main/Main.js","Redux/products.actions.js","Gate-ways/gateWays.js","Components/Menu/Menu.js","Components/Buscet/Buscet.js","App.js","Helpers/getOrderData.js","Redux/products.reducers.js","Redux/search.reducer.js","store.js","index.js"],"names":["CardItem","card","onAddToBuscet","onDeleteFromBuscet","onAddToPinned","onDeleteFromPinned","useState","isFlipped","changeFlipped","btn","changeBtn","pinned","changePinnedBtn","onClickFlip","flipDirection","Card","bg","className","Img","variant","src","image","onClick","Badge","price","Body","Title","name","Button","text","Header","ListGroup","Item","desription","productsListSelector","state","products","productsList","orderListSelector","order","orderList","pinnedListSelector","pinnedList","getSearchQuery","filter","searchQuery","searchProduct","createSelector","resultData","item","toLowerCase","mapDispatch","getProductsList","dispatch","fetch","then","response","ok","json","productList","type","payload","productsListRecived","addToBuscet","removeFromBuscet","addToPinned","removeFromPinned","searchItem","connect","data","useEffect","value","setValue","renderCards","Col","key","id","Container","md","lg","Form","onSubmit","event","preventDefault","Row","xs","style","position","marginBottom","Control","placeholder","onChange","target","sm","length","map","el","Menu","Navbar","expand","Toggle","aria-controls","Collapse","Nav","to","exact","pinnedItem","width","height","Subtitle","Text","orders","App","fluid","path","getOrderData","initialState","reducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48ac4614.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { Badge, ListGroup } from \"react-bootstrap\";\n\nexport const CardItem = ({\n  card,\n  onAddToBuscet,\n  onDeleteFromBuscet,\n  onAddToPinned,\n  onDeleteFromPinned,\n}) => {\n  const [isFlipped, changeFlipped] = useState(false);\n  const [btn, changeBtn] = useState(\"add\");\n  const [pinned, changePinnedBtn] = useState(\"pinned\");\n\n  const unpinnedBtn = () => {\n    changePinnedBtn(\"unpinned\");\n    onAddToPinned(card);\n  };\n  const pinnedBtn = () => {\n    changePinnedBtn(\"pinned\");\n    onDeleteFromPinned(card);\n  };\n\n  const deleteBtn = () => {\n    changeBtn(\"delete\");\n    onAddToBuscet(card);\n  };\n  const addBtn = () => {\n    changeBtn(\"add\");\n    onDeleteFromBuscet(card);\n  };\n  const onClickFlip = () => {\n    changeFlipped(!isFlipped);\n  };\n  return (\n    <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n      <Card bg=\"secondary\" className=\"mb-4 \">\n        <Card.Img variant=\"top\" src={card.image} onClick={onClickFlip} />\n        <Badge variant={\"danger\"}>Price: {card.price}</Badge>\n        <Card.Body\n          className={\"d-flex justify-content-between flex-column text-center\"}\n        >\n          <Card.Title className=\"text-white\">{card.name}</Card.Title>\n          <div className=\"d-flex justify-content-between button_block\">\n            {pinned  === \"pinned\" ? (\n              <Button className=\"btn btn-info\" onClick={unpinnedBtn}>\n                Add to pinned\n              </Button>\n            ) : (\n              <Button className=\"btn btn-info\" onClick={pinnedBtn}>\n                Delete from pinned\n              </Button>\n            )}\n            {btn === \"add\" ? (\n              <Button variant=\"success\" onClick={deleteBtn}>\n                Buy\n              </Button>\n            ) : (\n              <Button variant=\"danger\" onClick={addBtn}>\n                Delete\n              </Button>\n            )}\n          </div>\n        </Card.Body>\n      </Card>\n      <Card\n        onClick={onClickFlip}\n        text={\"white\"}\n        bg={\"secondary\"}\n        className={\"mb-4 \"}\n      >\n        <Card.Header>\n          <h3>{card.name}</h3>\n        </Card.Header>\n        <ListGroup>\n          <ListGroup.Item variant=\"light\">\n            Description: <strong>{card.desription}</strong>\n          </ListGroup.Item>\n        </ListGroup>\n      </Card>\n    </ReactCardFlip>\n  );\n};\n\nexport default CardItem;\n","import { createSelector } from \"reselect\";\n\nexport const productsListSelector = (state) => state.products.productsList;\nexport const orderListSelector = (state) => state.order.orderList;\nexport const pinnedListSelector = (state) => state.pinned.pinnedList;\nexport const getSearchQuery = (state) => state.filter.searchQuery;\n\nexport const searchProduct = createSelector(\n  [getSearchQuery, productsListSelector],\n  (searchQuery, products) => {\n    let resultData = searchQuery;\n    if (products) {\n      resultData = products.filter((item) => {\n        return item.name.toLowerCase() === searchQuery.toLowerCase();\n      });\n    }\n    return resultData;\n  }\n);\n","import React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row, Form } from \"react-bootstrap\";\nimport CardItem from \"./Blocks/Card\";\nimport {\n  productsListSelector,\n  orderListSelector,\n  pinnedListSelector,\n  searchProduct,\n  getSearchQuery,\n} from \"../../Redux/products.selectors\";\nimport * as actions from \"../../Redux/products.actions\";\nimport { connect } from \"react-redux\";\n\nconst Main = ({\n  getProductsList,\n  products,\n  addToBuscet,\n  removeFromBuscet,\n  addToPinned,\n  removeFromPinned,\n  searchItem,\n  searchQuery,\n  data,\n  order,\n}) => {\n  useEffect(() => {\n    getProductsList();\n  }, []);\n\n  const [value, setValue] = useState(\"\");\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    searchItem(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    searchItem(value);\n  };\n\n  const renderCards = (item) => (\n    <Col key={item.id}>\n      <CardItem\n        card={item}\n        onAddToBuscet={addToBuscet}\n        onDeleteFromBuscet={removeFromBuscet}\n        onAddToPinned={addToPinned}\n        onDeleteFromPinned={removeFromPinned}\n      />\n    </Col>\n  );\n  return (\n    <Container>\n      <Col md={9} lg={10}>\n        <Form onSubmit={handleSubmit}>\n          <Form.Row className=\"mb-1\">\n            <Col xs={12} md={6}>\n              <div style={{ position: \"relative\", marginBottom: 10 }}>\n                <Form.Control\n                  placeholder=\"Enter the product name\"\n                  value={searchQuery}\n                  onChange={handleChange}\n                />\n              </div>\n            </Col>\n          </Form.Row>\n        </Form>\n      </Col>\n      <Row xs={1} sm={2} md={2} lg={3}>\n        {data.length >= 1\n          ? data.map((el) => renderCards(el))\n          : products.map((el) => renderCards(el))}\n      </Row>\n    </Container>\n  );\n};\n\nconst mapDispatch = {\n  getProductsList: actions.getProductsList,\n  addToBuscet: actions.addToBuscet,\n  removeFromBuscet: actions.removeFromBuscet,\n  addToPinned: actions.addToPinned,\n  removeFromPinned: actions.removeFromPinned,\n  searchItem: actions.searchItem,\n};\nconst mapState = (state) => {\n  return {\n    products: productsListSelector(state),\n    order: orderListSelector(state),\n    pinned: pinnedListSelector(state),\n    searchQuery: getSearchQuery(state),\n    data: searchProduct(state),\n  };\n};\nexport default connect(mapState, mapDispatch)(Main);\n","import { fetchProductsList } from \"../Gate-ways/gateWays\";\n\nexport const PRODUCTS_LIST_RECIVED = \"PRODUCTS_LIST_RECIVED\";\nexport const ADD_TO_BUSCET = \"ADD_TO_BUSCET\";\nexport const REMOVE_FROM_BUSCET = \"REMOVE_FROM_BUSCET\";\nexport const ADD_TO_PINNED = \"ADD_TO_PINNED\";\nexport const REMOVE_FROM_PINNED = \"REMOVE_FROM_PINNED\";\nexport const SEARCH_ITEM = \"SEARCH_ITEM\";\n\nexport const productsListRecived = (productsList) => {\n  const action = {\n    type: PRODUCTS_LIST_RECIVED,\n    payload: {\n      productsList,\n    },\n  };\n  return action;\n};\nexport const addToBuscet = (orderList) => {\n  const action = {\n    type: ADD_TO_BUSCET,\n    payload: {\n      orderList,\n    },\n  };\n  return action;\n};\n\nexport const removeFromBuscet = (orderList) => {\n  const action = {\n    type: REMOVE_FROM_BUSCET,\n    payload: {\n      orderList,\n    },\n  };\n  return action;\n};\nexport const addToPinned = (pinnedList) => {\n  const action = {\n    type: ADD_TO_PINNED,\n    payload: {\n      pinnedList,\n    },\n  };\n  return action;\n};\nexport const removeFromPinned = (pinnedList) => {\n  const action = {\n    type: REMOVE_FROM_PINNED,\n    payload: {\n      pinnedList,\n    },\n  };\n  return action;\n};\n\nexport const searchItem = (searchQuery) => {\n  const action = {\n    type: SEARCH_ITEM,\n    payload: {\n      searchQuery,\n    },\n  };\n  return action;\n};\n\nexport const getProductsList = () => {\n  const thunkAction = function (dispatch) {\n    fetchProductsList().then((productsList) =>\n      dispatch(productsListRecived(productsList))\n    );\n  };\n  return thunkAction;\n};\n","const baseUrl = \"https://5e64c3daa49c210016106bc4.mockapi.io/item\";\n\nexport const fetchProductsList = () => {\n  return fetch(baseUrl)\n    .then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .then((productList) => {\n      return productList;\n    });\n};\n","import React from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Menu = () => {\n  return (\n    <Navbar bg=\"secondary\" expand=\"lg\" className=\"mb-5 nav-menu \">\n      <Container>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavLink to=\"/\" exact className=\"btn btn-link text-white\">\n              Catalog\n            </NavLink>\n            <NavLink to=\"/buscet\" className=\"btn btn-link text-white\">\n              Buscet\n            </NavLink>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\nexport default Menu;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Link } from \"react-router-dom\";\nimport {\n  orderListSelector,\n  pinnedListSelector,\n} from \"../../Redux/products.selectors\";\nimport { connect } from \"react-redux\";\n\nconst Buscet = ({ order, pinned }) => {\n  if (pinned.length > 1) {\n    return (\n      <div className=\"d-flex justify-content-center\">\n        Sorry, you can't add more then 1 pinned item\n      </div>\n    );\n  } else {\n    let pinnedItem = pinned.map((item) => {\n      return (\n        <Card style={{ width: \"10rem\", height: \"1rem\" }}>\n          <Card.Body>\n            <Card.Title>id: {item.pinnedList.id}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              Title: {item.pinnedList.name}\n            </Card.Subtitle>\n            <Card.Text>Desription: {item.pinnedList.desription}</Card.Text>\n            <Card.Text>Price: {item.pinnedList.price}</Card.Text>\n          </Card.Body>\n        </Card>\n      );\n    });\n    let orders = order.map((item) => {\n      return (\n        <Card style={{ width: \"10rem\" }}>\n          <Card.Body>\n            <Card.Title>id: {item.orderList.id}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              Title: {item.orderList.name}\n            </Card.Subtitle>\n            <Card.Text>Desription: {item.orderList.desription}</Card.Text>\n            <Card.Text>Price: {item.orderList.price}</Card.Text>\n          </Card.Body>\n        </Card>\n      );\n    });\n\n    return (\n      <div className=\"d-flex flex-column align-items-center\">\n        <h3>Pinned item:</h3>\n        <div>{pinnedItem}</div>\n\n        <h3>Your buscet</h3>\n        <div>{orders}</div>\n        <Link className=\"btn btn-outline-primary\" to=\"/\">\n          Back to Catalog\n        </Link>\n      </div>\n    );\n  }\n};\nconst mapState = (state) => {\n  return {\n    order: orderListSelector(state),\n    pinned: pinnedListSelector(state),\n  };\n};\nexport default connect(mapState)(Buscet);\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Main from \"./Components/Main/Main\";\nimport { Container } from \"react-bootstrap\";\nimport Menu from \"./Components/Menu/Menu\";\nimport Buscet from \"./Components/Buscet/Buscet\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Container fluid className=\"px-0 bg-light\">\n        <Menu />\n        <Switch>\n          <Route path=\"/e-shop/\" exact>\n            <Main />\n          </Route>\n          <Route path=\"/e-shop/buscet\">\n            <Buscet />\n          </Route>\n        </Switch>\n      </Container>\n    </Router>\n  );\n};\n\nexport default App;\n","const getOrderData = (data, order, type) => {\n  if (!data.length) return [{ ...order }];\n  if (type === \"delete\") return data.filter((el) => el.id !== order.id);\n  if (type === \"add\") return [...data, { ...order }];\n};\n\nexport default getOrderData;\n","import {\n  PRODUCTS_LIST_RECIVED,\n  ADD_TO_BUSCET,\n  REMOVE_FROM_BUSCET,\n  ADD_TO_PINNED,\n  REMOVE_FROM_PINNED,\n} from \"./products.actions\";\nimport getOrderData from \"../Helpers/getOrderData\";\n\nconst initialState = {\n  productsList: [],\n  orderList: [],\n  pinnedList: [],\n  searchQuery: '',\n};\n\nexport const productsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PRODUCTS_LIST_RECIVED:\n      return {\n        ...state,\n        productsList: action.payload.productsList,\n      };\n    default:\n      return state;\n  }\n};\nexport const orderReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_TO_BUSCET:\n      return {\n        ...state,\n        orderList: getOrderData(state.orderList, payload, \"add\"),\n      };\n\n    case REMOVE_FROM_BUSCET:\n      return {\n        ...state,\n        orderList: getOrderData(state.orderList, payload, \"delete\"),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const pinnedReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_TO_PINNED:\n      return {\n        ...state,\n        pinnedList: getOrderData(state.pinnedList, payload, \"add\"),\n      };\n    case REMOVE_FROM_PINNED:\n      return {\n        ...state,\n        pinnedList: getOrderData(state.pinnedList, payload, \"delete\"),\n      };\n    default:\n      return state;\n  }\n};\n\n","import { SEARCH_ITEM } from \"./products.actions\";\n\nconst initialState = {\n  searchQuery: \"\",\n};\n\nexport const filterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEARCH_ITEM:\n      return {\n        ...state,\n        searchQuery: action.payload.searchQuery,\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  productsReducer,\n  pinnedReducer,\n  orderReducer,\n} from \"./Redux/products.reducers\";\nimport { filterReducer } from \"./Redux/search.reducer\";\nconst reducer = combineReducers({\n  products: productsReducer,\n  order: orderReducer,\n  pinned: pinnedReducer,\n  filter: filterReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}